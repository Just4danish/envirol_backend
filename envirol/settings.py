"""
Django settings for envirol project.

Generated by 'django-admin startproject' using Django 3.2.11.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os
from dotenv import dotenv_values
config = dotenv_values(".env")

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config['SECRET_KEY']
JWT_SECRET_KEY = config['JWT_SECRET_KEY']

# SECURITY WARNING: don't run with debug turned on in production!
ENVIRONMENT = config['ENVIRONMENT']


if ENVIRONMENT == 'preproduction':
    ALLOWED_HOSTS = ['envirol.abacitechs.com']
    DEBUG = False
elif ENVIRONMENT == 'production':
    ALLOWED_HOSTS = ['fogwatch.envirol.ae']
    DEBUG = False
else:
    ALLOWED_HOSTS = ['*']
    DEBUG = True


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_extensions',
    'debug_toolbar',
    'corsheaders',
    'rest_framework',
    'users',
    'masters',
    'entity',
    'gtcc',
    'foodwatch',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "debug_toolbar.middleware.DebugToolbarMiddleware",
    'users.middleware.TokenMiddleware',
]

ROOT_URLCONF = 'envirol.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'build'),os.path.join(BASE_DIR, 'templates'),],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'envirol.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': config['DB_NAME'],
        'USER': config['DB_USER'],
        'PASSWORD': config['DB_PASSWORD'],
        'HOST': config['DB_HOST'],
        'PORT': config['DB_PORT'],
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Dubai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

if DEBUG:
    STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]
else: 
    STATIC_ROOT = [
    os.path.join(BASE_DIR,'static')
]


# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'



# Custom keys from ABACI - app specific
ASGI_APPLICATION = 'envirol.wsgi.application'

ADMIN_EMAIL = 'admin@abacitechs.com'
SIGNUP_URL = 'http://162.55.62.53:3000/signup/'
AUTH_USER_MODEL = 'users.Account'

CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True

DEFAULT_RENDERER_CLASSES = (
    'rest_framework.renderers.JSONRenderer',
)

if DEBUG:
    DEFAULT_RENDERER_CLASSES = DEFAULT_RENDERER_CLASSES + (
        'rest_framework.renderers.BrowsableAPIRenderer',
    )



REST_FRAMEWORK = {
        'DEFAULT_PERMISSION_CLASSES': [
            'rest_framework.permissions.IsAuthenticated',
        ],
        'DEFAULT_AUTHENTICATION_CLASSES': (
            # 'rest_framework.authentication.BasicAuthentication',
            'users.backends.JWTAuthentication',
            # 'rest_framework.authentication.SessionAuthentication',
        ),
        'DEFAULT_RENDERER_CLASSES': DEFAULT_RENDERER_CLASSES,
        'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
        'PAGE_SIZE': 10,
    }



MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, "media")

SENDER_EMAIL = config['SENDER_EMAIL']
EMAIL_BACKEND = config['EMAIL_BACKEND']
EMAIL_FILE_PATH = config['EMAIL_FILE_PATH']
EMAIL_HOST = config['EMAIL_HOST']
EMAIL_USE_TLS = config['EMAIL_USE_TLS'] == 'True'
EMAIL_PORT = config['EMAIL_PORT']
EMAIL_HOST_USER = config['EMAIL_HOST_USER']
EMAIL_HOST_PASSWORD = config['EMAIL_HOST_PASSWORD']



FRONTEND_HOST = config['FRONTEND_HOST']
BACKEND_HOST = config['BACKEND_HOST']

EXPIRY_IN_MINUTES = 6000

CBD_ENCRYPTION_KEY = config['CBD_ENCRYPTION_KEY']
CBD_CLIENT_ID = config['CBD_CLIENT_ID']

FOODWATCH_BASE_URL = config['FOODWATCH_BASE_URL']
FOODWATCH_USERNAME = config['FOODWATCH_USERNAME']
FOODWATCH_PASSWORD = config['FOODWATCH_PASSWORD']
FOODWATCH_APIKEY = config['FOODWATCH_APIKEY']

if DEBUG:
    INTERNAL_IPS = [
        "91.74.149.116",
        "49.37.233.125",
        "127.0.0.1",
    ]
